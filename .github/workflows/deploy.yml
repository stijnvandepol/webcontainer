name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main  # Pas dit aan naar de branch die je wilt gebruiken

jobs:
  build:
    runs-on: [self-hosted, docker-server]

    steps:
    # Stap 1: Checkout de code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Stap 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.docker_password }}" | docker login -u "${{ secrets.docker_username }}" --password-stdin

    # Stap 3: Bouw de Docker-image
    - name: Build the Docker image
      run: docker build -t stijn0vp/website:latest .

    # Stap 4: Push de Docker-image naar Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push stijn0vp/website:latest

    # Stap 5: Wissel tussen 'blue' en 'green' containers
    - name: Switch between blue and green containers
      run: |
        current_container=$(docker ps --filter "name=blue" -q)
        if [ -n "$current_container" ]; then
          new_container_name="green"
        else
          new_container_name="blue"
        fi

        # Stop en verwijder de huidige container met de nieuwe naam
        docker stop $new_container_name || true
        docker rm $new_container_name || true

        # Run de nieuwe container met de juiste naam
        docker run -d -p 80:80 --name $new_container_name stijn0vp/website:latest

        echo "De nieuwe container is $new_container_name."
