name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: [self-hosted, docker-server]

    steps:
    # Stap 1: Checkout de code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Stap 2: Log in op Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.docker_password }}" | docker login -u "${{ secrets.docker_username }}" --password-stdin

    # Stap 3: Bouw de Docker-image
    - name: Build the Docker image
      run: docker build -t stijn0vp/website:latest .

    # Stap 4: Push de Docker-image naar Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push stijn0vp/website:latest

    # Stap 5: Afwisselend pushen naar 'blue' of 'green' omgeving
    - name: Determine environment
      id: env
      run: |
        if [ -f .deploy_to_blue ]; then
          echo "Deploying to green environment"
          echo "env=green" >> $GITHUB_ENV
          rm .deploy_to_blue
        else
          echo "Deploying to blue environment"
          echo "env=blue" >> $GITHUB_ENV
          touch .deploy_to_blue
          
    # Stap 6: Run de Docker-container op de juiste omgeving (blue of green)
    - name: Deploy to Docker container
      run: |
        docker pull stijn0vp/website:latest
        docker stop website-${{ env.env }} || true
        docker rm website-${{ env.env }} || true
        if [ "${{ env.env }}" = "blue" ]; then
          docker run -d -p 8081:80 --name website-blue stijn0vp/website:latest
        else
          docker run -d -p 8082:80 --name website-green stijn0vp/website:latest
