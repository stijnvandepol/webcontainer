name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - main  # Pas dit aan naar de branch die je wilt gebruiken

jobs:
  build:
    runs-on: [self-hosted, docker-server]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.docker_password }}" | docker login -u "${{ secrets.docker_username }}" --password-stdin

    - name: Build the Docker image
      run: docker build -t stijn0vp/website:latest .

    - name: Push Docker image to Docker Hub
      run: docker push stijn0vp/website:latest

    - name: Deploy container
      run: |
        docker pull stijn0vp/website:latest
        
        # Check if both containers exist
        BLUE_EXISTS=$(docker ps -a --filter "name=blue" --format "{{.Names}}")
        GREEN_EXISTS=$(docker ps -a --filter "name=green" --format "{{.Names}}")

        if [ -z "$BLUE_EXISTS" ] && [ -z "$GREEN_EXISTS" ]; then
          # If neither container exists, deploy blue
          docker run -d -p 8081:80 --name blue stijn0vp/website:latest
        elif [ -z "$BLUE_EXISTS" ]; then
          # If only blue doesn't exist, deploy blue
          docker run -d -p 8081:80 --name blue stijn0vp/website:latest
        elif [ -z "$GREEN_EXISTS" ]; then
          # If only green doesn't exist, deploy green
          docker run -d -p 8082:80 --name green stijn0vp/website:latest
        else
          # If both containers exist, find the one that has been running the longest
          BLUE_UPTIME=$(docker inspect -f '{{.State.StartedAt}}' blue)
          GREEN_UPTIME=$(docker inspect -f '{{.State.StartedAt}}' green)

          if [ "$BLUE_UPTIME" \< "$GREEN_UPTIME" ]; then
            # If blue has been running longer, replace blue
            docker stop blue || true
            docker rm blue || true
            docker run -d -p 8081:80 --name blue stijn0vp/website:latest
          else
            # If green has been running longer, replace green
            docker stop green || true
            docker rm green || true
            docker run -d -p 8082:80 --name green stijn0vp/website:latest
          fi
        fi

  approval:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Manual approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: stijnvandepol

  update-haproxy:
    runs-on: [self-hosted, haproxy-server]
    needs: approval
    if: success()

    steps:
    - name: Switch proxy
      run: |
        echo "Running switchconfig.sh..."
        echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S bash /home/student/switchconfig.sh 2>&1
        echo "switchconfig.sh executed successfully."

  rollback:
    runs-on: [self-hosted, docker-server]
    needs: approval
    if: ${{ github.event.review.state == 'changes_requested' }}  # Voer deze job alleen uit als de goedkeuring wordt geweigerd

    steps:
    - name: Rollback deployment
      run: |
        # Inspect both containers to determine the most recent one
        BLUE_UPTIME=$(docker inspect -f '{{.State.StartedAt}}' blue 2>/dev/null || echo "")
        GREEN_UPTIME=$(docker inspect -f '{{.State.StartedAt}}' green 2>/dev/null || echo "")

        if [ -n "$BLUE_UPTIME" ] && [ -n "$GREEN_UPTIME" ]; then
          if [ "$BLUE_UPTIME" \> "$GREEN_UPTIME" ]; then
            # Blue is the most recently created container
            echo "Stopping and removing the most recent container: blue"
            docker stop blue || true
            docker rm blue || true
          else
            # Green is the most recently created container
            echo "Stopping and removing the most recent container: green"
            docker stop green || true
            docker rm green || true
          fi
        fi